{{- if and .Values.minio.enabled .Values.s3www.enabled .Values.uploadJob.cleanupEnabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup-upload-jobs-{{ randAlphaNum 5 | lower }}
  labels:
    {{- include "s3www.labels" . | nindent 4 }}
    job-type: cleanup
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 2
  template:
    spec:
      serviceAccountName: {{ include "s3www.serviceAccountName" . }}
      restartPolicy: OnFailure
      containers:
        - name: cleanup
          image: bitnami/kubectl:latest
          command:
            - /bin/bash
            - -c
            - |
              echo "Cleaning up old upload jobs..."
              
              # Delete completed upload jobs (older than current)
              kubectl delete jobs -l job-type=upload,app.kubernetes.io/instance={{ .Release.Name }} \
                --field-selector status.successful=1 \
                --ignore-not-found=true \
                || echo "No completed upload jobs to clean up"
              
              # Delete failed upload jobs (older than current)
              kubectl delete jobs -l job-type=upload,app.kubernetes.io/instance={{ .Release.Name }} \
                --field-selector status.failed=1 \
                --ignore-not-found=true \
                || echo "No failed upload jobs to clean up"
              
              echo "Cleanup complete!"
{{- end }}